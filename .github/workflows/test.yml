name: Run Tests with Testcontainers

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest  # Use an Ubuntu environment for CI
    
    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: --health-cmd "redis-server --version" --health-timeout 30s --health-retries 3 --health-start-period 5s
    
    steps:
      # Step 1: Checkout the code from your repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java (use the version of Java you need)
      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
          java-version: '23'
          distribution: 'temurin'

      # Step 3: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 4: Set up PostgreSQL for Testcontainers
      - name: Set up PostgreSQL for Testcontainers
        run: |
          docker pull postgres:latest
          docker run -d --name postgres -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=12345678 -e POSTGRES_DB=library -p 5432:5432 postgres:latest

      # Step 5: Wait for PostgreSQL to be ready (for Testcontainers to connect to)
      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for database to be ready on port 5432..."
            sleep 2
          done
          echo "PostgreSQL is ready!"

      # Step 6: Build and run tests
      - name: Build and run tests
        run: mvn clean verify -DskipTests=false

      # Optional: Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
